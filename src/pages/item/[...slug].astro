---
import { getCollection, getEntry, type CollectionEntry } from "astro:content";


export async function getStaticPaths() {
  const index: CollectionEntry<"index">[] = await getCollection("index");
  const paths = index.map(item => item.data.map(entry => entry.slug)).flat(2).map(slug => ({params: {slug}}));

  return paths;
}

const index: CollectionEntry<"index">[] = await getCollection("index");
const { slug } = Astro.params;

const item = index.flatMap(item => item.data).find(entry => entry.slug === slug);
const files = item?.files;


console.log(item)
---

<style>
  .container {
    max-width: 800px;
    margin: 0 auto;
    padding: 20px;
  }
  h1 {
    font-size: 2em;
    margin-bottom: 20px;
  }
  table {
    width: 100%;
    border-collapse: collapse;
  }
  th, td {
    padding: 10px;
    text-align: left;
    border-bottom: 1px solid #ddd;
  }
</style>
<div class="container mx-auto p-4">
  <h1 class="text-2xl font-bold mb-4">{item?.title}</h1>
  <p class="mb-4">{item?.description}</p>

  {files && files.length > 0 ? (
    <table class="min-w-full border-collapse">
      <thead>
        <tr>
          <th class="border p-2 text-left">Name</th>
          <th class="border p-2 text-left">Description</th>
          <th class="border p-2 text-left">Size</th>
        </tr>
      </thead>
      <tbody>
        {files.map(file => (
          <tr>
            <td class="border p-2"><a href={`/file/${file.path}`}>{file.name}</a></td>
            <td class="border p-2">{file.description || '-'}</td>
            <td class="border p-2">{Math.round(file.size / 1024)} KB</td>
          </tr>
        ))}
      </tbody>
    </table>
  ) : (
    <p>No files available</p>
  )}
</div>


